name: Deploy to Amazon EC2

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        env:
          IMAGE_TAG: latest
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          INFO_DISCORDURL: ${{ secrets.INFO_DISCORDURL }}
          WARNING_DISCORDURL: ${{ secrets.WARNING_DISCORDURL }}
          LOG_PATH: ${{ secrets.LOG_PATH }}
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/acha-extractor:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/acha-extractor:latest

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: docker/docker-compose.prod.yml
          target: /home/ubuntu/app/
          strip_components: 1

      - name: Pull Image and Restart WSGI
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            export SECRET_KEY="${{ secrets.SECRET_KEY }}"
            export ALLOWED_HOSTS="${{ secrets.ALLOWED_HOSTS }}"
            export INFO_DISCORDURL="${{ secrets.INFO_DISCORDURL }}"
            export WARNING_DISCORDURL="${{ secrets.WARNING_DISCORDURL }}"
            export LOG_PATH="${{ secrets.LOG_PATH }}"
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker-compose -f /home/ubuntu/app/docker-compose.prod.yml pull
            docker-compose -f /home/ubuntu/app/docker-compose.prod.yml up --pull always --no-deps -d
